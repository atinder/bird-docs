name: PR Preview

on:
  pull_request:
    branches: [ "master", "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

# Allow concurrent deployments for different PRs
concurrency:
  group: "pages-pr-${{ github.event.pull_request.number }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.3'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "Building site for PR #${PR_NUMBER}"
          
          # Create PR-specific config with proper date format
          cat > _config.pr.yml << EOF
          baseurl: "/bird-docs"
          build_time: "$(date -u +"%Y-%m-%d %H:%M:%S %z")"
          pr_number: "${PR_NUMBER}"
          EOF
          
          # Build using both configs
          JEKYLL_ENV=production bundle exec jekyll build --config _config.yml,_config.pr.yml
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const prNumber = context.issue.number;
            const previewUrl = `https://${owner}.github.io/${repo}/`;
            const timestamp = new Date().toISOString();
            
            github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: prNumber,
              body: `ðŸ“š Documentation preview is ready! (Updated at: ${timestamp})\nYou can view it here: ${previewUrl}\n\nThis preview will be updated automatically when you push new changes to the PR.`
            }); 