name: PR Preview

on:
  pull_request:
    branches: [ "master", "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

# Allow concurrent deployments for different PRs
concurrency:
  group: "pages-pr-${{ github.event.pull_request.number }}"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.3'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Debug Info
        run: |
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Base Path: ${{ steps.pages.outputs.base_path }}"

      - name: Build with Jekyll
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "Building site for PR #${PR_NUMBER}"
          bundle exec jekyll build --config _config.yml --baseurl "/bird-docs/preview/pr-${PR_NUMBER}"
          echo "Contents of _site directory:"
          ls -la _site/
        env:
          JEKYLL_ENV: production

      - name: Deploy to Preview Branch
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_BRANCH="preview/pr-${PR_NUMBER}"
          
          # Configure git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Create and switch to a new orphan branch
          git checkout --orphan $PREVIEW_BRANCH
          
          # Clear the working directory except _site and .git
          git rm -rf .
          
          # Move _site contents to root and clean up
          cp -r _site/* .
          rm -rf _site
          
          # Stage and commit all files
          git add -A
          git commit -m "Deploy preview for PR #${PR_NUMBER}"
          git push origin $PREVIEW_BRANCH --force

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const prNumber = context.issue.number;
            const previewUrl = `https://${owner}.github.io/${repo}/preview/pr-${prNumber}/`;
            
            github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: prNumber,
              body: `ðŸ“š Documentation preview is ready!\nYou can view it here: ${previewUrl}\n\nThis preview will be updated automatically when you push new changes to the PR.`
            }); 