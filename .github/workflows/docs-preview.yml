name: PR Preview

on:
  pull_request:
    branches: [ "master", "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

# Allow concurrent deployments for different PRs
concurrency:
  group: "preview-${{ github.event.pull_request.number }}"
  cancel-in-progress: true

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.3'
          bundler-cache: true

      - name: Build with Jekyll
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "Building site for PR #${PR_NUMBER}"
          
          # Create PR-specific config with proper date format
          cat > _config.pr.yml << EOF
          baseurl: ""
          build_time: "$(date -u +"%Y-%m-%d %H:%M:%S %z")"
          pr_number: "${PR_NUMBER}"
          EOF
          
          # Build using both configs
          JEKYLL_ENV=production bundle exec jekyll build --config _config.yml,_config.pr.yml
        env:
          JEKYLL_ENV: production

      - name: Deploy Preview
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_BRANCH="gh-pages"
          PREVIEW_DIR="preview/pr-${PR_NUMBER}"
          
          # Configure git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Fetch and checkout gh-pages branch
          git fetch origin gh-pages || git fetch origin main
          git checkout gh-pages || git checkout -b gh-pages
          
          # Create preview directory
          mkdir -p "$PREVIEW_DIR"
          
          # Remove old preview content
          rm -rf "$PREVIEW_DIR"/*
          
          # Copy new preview content
          cp -r _site/* "$PREVIEW_DIR/"
          
          # Add and commit changes
          git add -A
          git commit -m "Deploy preview for PR #${PR_NUMBER} ($(date +%s))" || echo "No changes to commit"
          
          # Push to gh-pages branch
          git push origin gh-pages

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const prNumber = context.issue.number;
            const previewUrl = `https://${owner}.github.io/${repo}/preview/pr-${prNumber}/`;
            const timestamp = new Date().toISOString();
            
            const message = [
              `ðŸ“š Documentation preview is ready! (Updated at: ${timestamp})`,
              '',
              'Preview URLs:',
              `- GitHub Pages: ${previewUrl}`,
              `- Raw Files: https://github.com/${owner}/${repo}/tree/gh-pages/preview/pr-${prNumber}`,
              '',
              'This preview will be updated automatically when you push new changes to the PR.'
            ].join('\n');
            
            github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: prNumber,
              body: message
            }); 